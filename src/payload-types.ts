/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    events: Event;
    'page-headers': PageHeader;
    'page-sections': PageSection;
    'what-to-do-in-luanda': WhatToDoInLuanda;
    vision: Vision;
    'call-to-actions': CallToAction;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    'page-headers': PageHeadersSelect<false> | PageHeadersSelect<true>;
    'page-sections': PageSectionsSelect<false> | PageSectionsSelect<true>;
    'what-to-do-in-luanda': WhatToDoInLuandaSelect<false> | WhatToDoInLuandaSelect<true>;
    vision: VisionSelect<false> | VisionSelect<true>;
    'call-to-actions': CallToActionsSelect<false> | CallToActionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: 'pt' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  type?: ('image' | 'document' | 'video' | 'audio') | null;
  _key?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      _key?: string | null;
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: string;
  title: string;
  description: string;
  location: string;
  link: string;
  image: string | Media;
  status: 'draft' | 'published';
  /**
   * Check to highlight this event as a featured item.
   */
  isFeatured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-headers".
 */
export interface PageHeader {
  id: string;
  title: string;
  subtitle?: string | null;
  page: 'explore' | 'facilidades' | 'institucional' | 'investe' | 'informações' | 'custom';
  backgroundImage: string | Media;
  textColor?: ('text-white' | 'text-black' | 'text-primary' | 'custom') | null;
  /**
   * Enter a custom text color class or hex value
   */
  customTextColor?: string | null;
  /**
   * Set whether this header is active
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-sections".
 */
export interface PageSection {
  id: string;
  /**
   * Internal title for this section (not displayed on the site)
   */
  title: string;
  type:
    | 'text'
    | 'gallery'
    | 'features'
    | 'stats'
    | 'testimonials'
    | 'faq'
    | 'government-cards'
    | 'investment-cards'
    | 'events-carousel'
    | 'custom';
  page: 'home' | 'explore' | 'facilidades' | 'institucional' | 'investe' | 'informações';
  heading?: string | null;
  subheading?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  media?:
    | {
        image: string | Media;
        caption?: string | null;
        altText?: string | null;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        title: string;
        description?: string | null;
        /**
         * Icon name (e.g., "map", "calendar", "users")
         */
        icon?: string | null;
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  stats?:
    | {
        label: string;
        value: string;
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  testimonials?:
    | {
        quote: string;
        author: string;
        role?: string | null;
        avatar?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  faqs?:
    | {
        question: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  governmentCards?:
    | {
        title: string;
        description: string;
        /**
         * Select a Lucide icon for the government card.
         */
        icon:
          | 'building-2'
          | 'lucide:building-2'
          | 'lucide:users'
          | 'lucide:award'
          | 'lucide:map-pin'
          | 'lucide:shield'
          | 'lucide:gavel'
          | 'lucide:globe'
          | 'lucide:briefcase'
          | 'lucide:landmark'
          | 'lucide:scale-3'
          | 'heroicons-building-office-2'
          | 'fa:balance-scale';
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  investmentCards?:
    | {
        name: string;
        description: string;
        /**
         * Emoji or icon character
         */
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  eventsCarouselSettings?: {
    showOnlyPublished?: boolean | null;
    /**
     * Maximum number of events to display
     */
    maxEvents?: number | null;
  };
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "what-to-do-in-luanda".
 */
export interface WhatToDoInLuanda {
  id: string;
  title: string;
  description: string;
  image: string | Media;
  status: 'draft' | 'published';
  /**
   * Check to highlight this activity as a featured item.
   */
  isFeatured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vision".
 */
export interface Vision {
  id: string;
  title: string;
  description: string;
  timeline: {
    year: string;
    goal: string;
    id?: string | null;
  }[];
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "call-to-actions".
 */
export interface CallToAction {
  id: string;
  title: string;
  page: 'explore' | 'facilidades' | 'institucional' | 'investe' | 'informações';
  heading?: string | null;
  subheading?: string | null;
  buttons?:
    | {
        label: string;
        icon?: string | null;
        variant?: ('default' | 'secondary' | 'outline') | null;
        url?: string | null;
        target?: ('_self' | '_blank') | null;
        id?: string | null;
      }[]
    | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'events';
        value: string | Event;
      } | null)
    | ({
        relationTo: 'page-headers';
        value: string | PageHeader;
      } | null)
    | ({
        relationTo: 'page-sections';
        value: string | PageSection;
      } | null)
    | ({
        relationTo: 'what-to-do-in-luanda';
        value: string | WhatToDoInLuanda;
      } | null)
    | ({
        relationTo: 'vision';
        value: string | Vision;
      } | null)
    | ({
        relationTo: 'call-to-actions';
        value: string | CallToAction;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  type?: T;
  _key?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        desktop?:
          | T
          | {
              _key?: T;
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  location?: T;
  link?: T;
  image?: T;
  status?: T;
  isFeatured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-headers_select".
 */
export interface PageHeadersSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  page?: T;
  backgroundImage?: T;
  textColor?: T;
  customTextColor?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-sections_select".
 */
export interface PageSectionsSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  page?: T;
  heading?: T;
  subheading?: T;
  content?: T;
  media?:
    | T
    | {
        image?: T;
        caption?: T;
        altText?: T;
        id?: T;
      };
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        image?: T;
        id?: T;
      };
  stats?:
    | T
    | {
        label?: T;
        value?: T;
        icon?: T;
        id?: T;
      };
  testimonials?:
    | T
    | {
        quote?: T;
        author?: T;
        role?: T;
        avatar?: T;
        id?: T;
      };
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  governmentCards?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        image?: T;
        id?: T;
      };
  investmentCards?:
    | T
    | {
        name?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  eventsCarouselSettings?:
    | T
    | {
        showOnlyPublished?: T;
        maxEvents?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "what-to-do-in-luanda_select".
 */
export interface WhatToDoInLuandaSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  status?: T;
  isFeatured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vision_select".
 */
export interface VisionSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  timeline?:
    | T
    | {
        year?: T;
        goal?: T;
        id?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "call-to-actions_select".
 */
export interface CallToActionsSelect<T extends boolean = true> {
  title?: T;
  page?: T;
  heading?: T;
  subheading?: T;
  buttons?:
    | T
    | {
        label?: T;
        icon?: T;
        variant?: T;
        url?: T;
        target?: T;
        id?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}